{"version":3,"sources":["components/header/header.js","components/global/global-summary.jsx","util/formatter.js","components/global/global-table.jsx","components/global/global-charts.jsx","components/global/global-series.jsx","components/global/covid-curves.jsx","components/cards/simple-card.jsx","components/global/index.jsx","pages/home/home.js","components/charts/minichart.js","components/country-summary/country-summary.js","components/province-summary/province-summary.js","util/sort.js","store.js","pages/canada/canada.jsx","components/banner/banner.js","pages/about/about.js","pages/sandbox/mui/mui-sandbox.js","pages/sandbox/rechart/rechat-data.js","pages/sandbox/rechart/rechart-sandbox.js","pages/sandbox/rapid-api/rapid-api.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","toolbar","justifyContent","logoWrapper","display","alignItems","color","logo","height","marginRight","navlink","textDecoration","activeNavLink","palette","text","dropdownNavLink","MenuText","path","classes","dropdown","Typography","varient","component","NavLink","exact","to","className","activeClassName","Header","useState","anchorEl","setAnchorEl","handleSandboxClose","AppBar","position","Toolbar","alt","src","process","Button","aria-controls","aria-haspopup","onClick","event","console","log","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","GlobalSummary","setGlobalSummary","useEffect","axios","get","then","response","data","Grid","container","item","md","align","variant","gutterBottom","numberFormat","value","Intl","NumberFormat","format","flagIcon","maxWidth","table","textAlign","background","tableHeader","fontSize","imgWrapperCell","GlobalTable","global","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","colSpan","TableBody","map","index","key","countryInfo","flag","country","cases","todayCases","active","recovered","deaths","todayDeaths","critical","casesPerOneMillion","deathsPerOneMillion","getPath","x","y","width","TriangleBar","props","fill","d","stroke","GlobalChart","margin","top","right","left","bottom","strokeDasharray","dataKey","style","tickFormatter","formatter","shape","formatXAxis","tickItem","moment","Date","formatTooltip","TimeSeriesChart","graphName","labelFormatter","verticalAlign","name","type","strokeWidth","dot","GlobalSeries","globalSeries","setGlobalSeries","caseData","confirmedCases","Object","entries","date","recoveredCases","deathCases","confirmed","catch","err","lg","SeriesChart","confirmCases","CovidCurves","canadaRequest","usaRequest","italyRequest","spainRequest","germanyRequest","chinaRequest","franceRequest","iranRequest","all","spread","responses","canadaResponse","usaResponse","spainResponse","italyResponse","germanyResponse","franceResponse","chinaResponse","iranResponse","canadaCases","timeline","canada","usaCases","usa","spainCases","spain","italyCases","italy","germanyCases","germany","franceCases","france","chinaCases","china","iranCases","iran","totalCases","mergedCases","reduce","acc","series","cardHeader","card","cardContent","SimpleCard","title","children","Card","CardHeader","CardContent","gridContainer","padding","gridContainerItem","gridItem","paddingTop","Global","setGlobal","useTheme","xs","spacing","slice","HomePage","MiniChart","textTransform","marginBottom","fontWeight","newCases","SummaryCard","chartData","cardClass","Box","SummaryCards","countrySummary","countrySeries","SummaryMessage","CountrySummary","ProvinceTable","province","ProvinceChart","angle","textAnchor","yAxisId","label","offset","orientation","entry","ProvinceSummary","tableData","sortedData","themes","sort","order","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","compareValues","marginLeft","flex","countryStore","country_name","code","icon","top20Countries","bannerDB","banner","numberoftimes","canadianProvinceDB","canadianProvincialCodeDB","Alberta","Manitoba","Ontario","Quebec","Saskatchewan","Yukon","CanadaPage","setCountrySummary","setCountrySeries","provinceTableData","setProvinceTableData","countryData","filter","includes","provincialCode","stats","Banner","snippets","setSnippets","snippet","setSnippet","snippetChooser","useCallback","min","max","Math","random","floor","interval","setInterval","length","clearInterval","Container","AboutPage","marginTop","maxHeight","List","aria-label","ListItem","MuiSandboxPage","dataStore","uv","pv","amt","ReChartSandboxPage","activeDot","r","paper","flexFlow","cardRoot","totalCaseGrid","totalCaseGridRow","RapidApiPage","apiKey","countries","setCountries","method","headers","fetchCountries","countries_stat","mergeCountries","c","sm","cItem","stat","total_recovered","total_cases_per_1m_population","createMuiTheme","typography","fontFamily","h1","h2","h3","h4","h5","h6","primary","main","secondary","info","success","header","dark","responsiveFontSizes","App","Fragment","CssBaseline","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af9d55bd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles(theme => {\n  return {\n    toolbar: {\n      justifyContent: \"space-between\"\n    },\n    logoWrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n      color: \"white\"\n    },\n    logo: {\n      height: 50,\n      marginRight: 10\n    },\n    navlink: {\n      textDecoration: \"none\",\n      color: \"white\"\n    },\n    activeNavLink: {\n      color: theme.palette.text.activeNavLink\n    },\n    dropdownNavLink: {\n      textDecoration: \"none\",\n      color: \"black\"\n    }\n  };\n});\n\nconst MenuText = ({ path, text, classes, dropdown }) => {\n  return (\n    <Typography\n      varient=\"h6\"\n      component={NavLink}\n      exact\n      to={path}\n      className={dropdown ? classes.dropdownNavLink : classes.navlink}\n      activeClassName={classes.activeNavLink}\n    >\n      {text}\n    </Typography>\n  );\n};\nconst Header = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const classes = useStyles();\n\n  const handleSandboxClick = event => {\n    console.log(event.currentTarget);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleSandboxClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <AppBar position=\"static\">\n      <Toolbar className={classes.toolbar}>\n        <Typography\n          varient=\"h6\"\n          component={NavLink}\n          exact\n          to=\"/\"\n          className={classes.navlink}\n        >\n          <div className={classes.logoWrapper}>\n            <img\n              className={classes.logo}\n              alt=\"\"\n              src={`${process.env.PUBLIC_URL}/favicon.png`}\n            />\n            <Typography display=\"inline\" varient=\"highlight\">\n              COVID-19 TRACKER\n            </Typography>\n          </div>\n        </Typography>\n\n        <div>\n          <Button>\n            <MenuText path=\"/\" text=\"Home\" classes={classes}></MenuText>\n          </Button>\n          <Button>\n            <MenuText path=\"/canada\" text=\"Canada\" classes={classes}></MenuText>\n          </Button>\n          <Button>\n            <MenuText path=\"/about\" text=\"About\" classes={classes}></MenuText>\n          </Button>\n          <Button\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleSandboxClick}\n          >\n            <Typography varient=\"h6\" className={classes.navlink}>\n              Sandbox\n            </Typography>\n          </Button>\n          <Menu\n            id=\"sandbox-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleSandboxClose}\n          >\n            <MenuItem onClose={handleSandboxClose}>\n              <MenuText\n                path=\"/mui-sandbox\"\n                text=\"Material UI\"\n                classes={classes}\n                dropdown={true}\n              ></MenuText>\n            </MenuItem>\n            <MenuItem onClose={handleSandboxClose}>\n              <MenuText\n                path=\"/rechart-sandbox\"\n                text=\"Rechart\"\n                classes={classes}\n                dropdown={true}\n              ></MenuText>\n            </MenuItem>\n            <MenuItem onClose={handleSandboxClose}>\n              <MenuText\n                path=\"/rapid-api\"\n                text=\"Rapid API\"\n                classes={classes}\n                dropdown={true}\n              ></MenuText>\n            </MenuItem>\n          </Menu>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nconst GlobalSummary = () => {\n  const [globalSummary, setGlobalSummary] = useState([]);\n\n  // fetch global summary\n  useEffect(() => {\n    const fetchGlobalSummary = () => {\n      axios.get(`https://corona.lmao.ninja/all`).then((response) => {\n        setGlobalSummary(response.data);\n      });\n      // console.log(globalSummary);\n    };\n    fetchGlobalSummary();\n  }, []);\n\n  return (\n    <Grid container>\n      <Grid item md={6}></Grid>\n      <Grid item md={6} align=\"left\">\n        <Typography variant=\"h3\">Tracking the coronavirus</Typography>\n        <Typography variant=\"h6\" gutterBottom>\n          Stay informed with the latest data on the number of COVID-19 cases.\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          While the numbers can tell you a lot about the coronavirus, the case\n          numbers only tell part of the story.\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          Areas that test a high number of people will ultimately detect more\n          cases than those that are not doing as much testing. There may also be\n          surges in the number of cases when there are a high number of tests\n          done in a short time frame.\n        </Typography>\n        <Typography variant=\"body1\">\n          The same is true for Canada's provinces and territories. Different\n          rates in testing and changes in how regions are recording results can\n          result in higher numbers for some regions over others.\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\nexport default GlobalSummary;\n","export const numberFormat = value => {\n  return new Intl.NumberFormat(\"en\").format(value);\n};\n","import React from \"react\";\nimport {\n  TableContainer,\n  Paper,\n  TableCell,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n} from \"@material-ui/core\";\nimport { numberFormat } from \"../../util/formatter\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    flagIcon: {\n      maxWidth: 30,\n      marginRight: 10,\n    },\n    table: {\n      \"& th\": {\n        textAlign: \"center\",\n        background: theme.palette.background.tableHeader,\n        color: \"white\",\n        fontSize: 16,\n      },\n      \"& td\": {\n        textAlign: \"center\",\n        // color: theme.palette.primaryText.main,\n      },\n    },\n    imgWrapperCell: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  };\n});\n\nconst GlobalTable = ({ global }) => {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size=\"medium\" className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell colSpan={2}>Country</TableCell>\n            <TableCell>Total Cases</TableCell>\n            <TableCell>Today Cases</TableCell>\n            <TableCell>Active</TableCell>\n            <TableCell>Total Recovered</TableCell>\n            <TableCell>Total Deaths</TableCell>\n            <TableCell>Today Deaths</TableCell>\n            <TableCell>Critical</TableCell>\n            <TableCell>Case per 1M</TableCell>\n            <TableCell>Death per 1M</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {global.map((item, index) => {\n            return (\n              <TableRow key={index}>\n                <TableCell align=\"right\">{index + 1}.</TableCell>\n                <TableCell align=\"left\" className={classes.imgWrapperCell}>\n                  <img\n                    alt=\"\"\n                    src={item.countryInfo.flag}\n                    className={classes.flagIcon}\n                  />\n                  {item.country}\n                </TableCell>\n                <TableCell>{numberFormat(item.cases)}</TableCell>\n                <TableCell>{numberFormat(item.todayCases)}</TableCell>\n                <TableCell>{numberFormat(item.active)}</TableCell>\n                <TableCell>{numberFormat(item.recovered)}</TableCell>\n                <TableCell>{numberFormat(item.deaths)}</TableCell>\n                <TableCell>{numberFormat(item.todayDeaths)}</TableCell>\n                <TableCell>{numberFormat(item.critical)}</TableCell>\n                <TableCell>{numberFormat(item.casesPerOneMillion)}</TableCell>\n                <TableCell>{numberFormat(item.deathsPerOneMillion)}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default GlobalTable;\n","import React from \"react\";\n\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from \"recharts\";\n\nconst getPath = (x, y, width, height) => {\n  return `M${x},${y + height}\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${\n    x + width / 2\n  }, ${y}\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${\n    y + height\n  } ${x + width}, ${y + height}\n          Z`;\n};\n\nconst TriangleBar = (props) => {\n  const { fill, x, y, width, height } = props;\n\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\n};\n\nconst GlobalChart = ({ data }) => {\n  // console.log(data);\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <ComposedChart\n        data={data}\n        margin={{ top: 30, right: 20, left: 10, bottom: 0 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"country\" style={{ fontSize: 12 }} />\n        <YAxis\n          fontSize={12}\n          tickFormatter={(value) => new Intl.NumberFormat(\"en\").format(value)}\n        />\n        <Tooltip\n          formatter={(value) => new Intl.NumberFormat(\"en\").format(value)}\n        />\n        <Bar dataKey=\"cases\" fill=\"#ec407a\" shape={<TriangleBar />}></Bar>\n      </ComposedChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default GlobalChart;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport { Grid } from \"@material-ui/core\";\nimport {\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  LineChart,\n  Line,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nfunction formatXAxis(tickItem) {\n  return moment(new Date(tickItem)).format(\"MMM D\");\n}\n\nfunction formatTooltip(tickItem) {\n  return moment(new Date(tickItem)).format(\"MMM D, YYYY\");\n}\n\nconst TimeSeriesChart = ({ data, graphName, width = 400 }) => {\n  return (\n    <ResponsiveContainer width={width} height={300}>\n      <LineChart\n        data={data}\n        margin={{ top: 10, right: 20, left: 10, bottom: 0 }}\n      >\n        <XAxis dataKey=\"date\" tickFormatter={formatXAxis} fontSize={12} />\n        <YAxis\n          fontSize={12}\n          tickFormatter={(value) => new Intl.NumberFormat(\"en\").format(value)}\n        />\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Tooltip\n          formatter={(value) => new Intl.NumberFormat(\"en\").format(value)}\n          labelFormatter={formatTooltip}\n        />\n        <Legend verticalAlign=\"top\" />\n        <Line\n          name={graphName}\n          type=\"monotone\"\n          dataKey=\"cases\"\n          stroke=\"#8884d8\"\n          strokeWidth={3}\n          // dot={{ strokeWidth: 3 }}\n          // activeDot={{ r: 3 }}\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nconst GlobalSeries = () => {\n  const [globalSeries, setGlobalSeries] = useState([]);\n\n  // fetch global series\n  useEffect(() => {\n    const fetchGlobalSeries = () => {\n      axios\n        .get(`https://corona.lmao.ninja/v2/historical/all`)\n        .then((response) => {\n          // console.log(response.data);\n          const caseData = response.data;\n\n          let confirmedCases = Object.entries(caseData.cases).map((item) => {\n            return { date: item[0], cases: item[1] };\n          });\n\n          let recoveredCases = Object.entries(caseData.recovered).map(\n            (item) => {\n              return { date: item[0], cases: item[1] };\n            }\n          );\n\n          let deathCases = Object.entries(caseData.deaths).map((item) => {\n            return { date: item[0], cases: item[1] };\n          });\n\n          const cases = {\n            confirmed: confirmedCases,\n            recovered: recoveredCases,\n            deaths: deathCases,\n          };\n          setGlobalSeries(cases);\n        })\n        .catch((err) => {\n          console.log(\"[Fetch global series]\", err);\n        });\n    };\n\n    fetchGlobalSeries();\n  }, []);\n\n  return (\n    <Grid container>\n      <Grid item lg={4}>\n        <TimeSeriesChart\n          data={globalSeries.confirmed}\n          graphName=\"Total Confirmed Cases\"\n          width=\"100%\"\n        />\n      </Grid>\n      <Grid item lg={4}>\n        <TimeSeriesChart\n          data={globalSeries.recovered}\n          graphName=\"Total Recovered\"\n          width=\"100%\"\n        />\n      </Grid>\n      <Grid item lg={4}>\n        <TimeSeriesChart\n          data={globalSeries.deaths}\n          graphName=\"Total Deaths\"\n          width=\"100%\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default GlobalSeries;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport {\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  LineChart,\n  Line,\n  Legend,\n  Label,\n} from \"recharts\";\n\nconst SeriesChart = ({ confirmCases }) => {\n  console.log(\"confirmCases\", confirmCases);\n\n  function formatXAxis(tickItem) {\n    return moment(new Date(tickItem)).format(\"MMM D\");\n  }\n\n  function formatTooltip(tickItem) {\n    return moment(new Date(tickItem)).format(\"MMM D, YYYY\");\n  }\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <LineChart\n        data={confirmCases}\n        margin={{ top: 10, right: 20, left: 10, bottom: 0 }}\n      >\n        <XAxis dataKey=\"date\" tickFormatter={formatXAxis} fontSize={12}></XAxis>\n        <YAxis\n          fontSize={12}\n          tickFormatter={(value) => new Intl.NumberFormat(\"en\").format(value)}\n        />\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Tooltip\n          formatter={(value) => new Intl.NumberFormat(\"en\").format(value)}\n          labelFormatter={formatTooltip}\n        />\n        <Legend verticalAlign=\"top\" />\n        <Line\n          name=\"Canada\"\n          type=\"monotone\"\n          dataKey=\"canada\"\n          stroke=\"#ff0000\"\n          strokeWidth={3}\n          dot={false}\n        />\n        <Line\n          name=\"USA\"\n          type=\"monotone\"\n          dataKey=\"usa\"\n          stroke=\"#3C3B6E\"\n          strokeWidth={3}\n          dot={false}\n        />\n        <Line\n          name=\"Spain\"\n          type=\"monotone\"\n          dataKey=\"spain\"\n          stroke=\"#F1BF00\"\n          strokeWidth={3}\n          dot={false}\n        />\n        <Line\n          name=\"Italy\"\n          type=\"monotone\"\n          dataKey=\"italy\"\n          stroke=\"#008C45\"\n          strokeWidth={3}\n          dot={false}\n        />\n        <Line\n          name=\"Germany\"\n          type=\"monotone\"\n          dataKey=\"germany\"\n          stroke=\"#FF6584\"\n          strokeWidth={3}\n          dot={false}\n        />\n        <Line\n          name=\"China\"\n          type=\"monotone\"\n          dataKey=\"china\"\n          stroke=\"#6C63FF\"\n          strokeWidth={3}\n          dot={false}\n        />\n        <Line\n          name=\"iran\"\n          type=\"monotone\"\n          dataKey=\"iran\"\n          stroke=\"#456990\"\n          strokeWidth={3}\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\nconst CovidCurves = () => {\n  const [globalSeries, setGlobalSeries] = useState([]);\n\n  // fetch global series\n  useEffect(() => {\n    const path = \"https://corona.lmao.ninja/v2/historical\";\n    const canadaRequest = axios.get(`${path}/canada`);\n    const usaRequest = axios.get(`${path}/usa`);\n    const italyRequest = axios.get(`${path}/italy`);\n    const spainRequest = axios.get(`${path}/spain`);\n    const germanyRequest = axios.get(`${path}/germany`);\n    const chinaRequest = axios.get(`${path}/china`);\n    const franceRequest = axios.get(`${path}/france`);\n    const iranRequest = axios.get(`${path}/iran`);\n\n    const fetchCountriesSeries = () => {\n      axios\n        .all([\n          canadaRequest,\n          usaRequest,\n          spainRequest,\n          italyRequest,\n          germanyRequest,\n          franceRequest,\n          chinaRequest,\n          iranRequest,\n        ])\n        .then(\n          axios.spread((...responses) => {\n            const canadaResponse = responses[0].data;\n            const usaResponse = responses[1].data;\n            const spainResponse = responses[3].data;\n            const italyResponse = responses[2].data;\n            const germanyResponse = responses[4].data;\n            const franceResponse = responses[6].data;\n            const chinaResponse = responses[5].data;\n            const iranResponse = responses[7].data;\n\n            const canadaCases = Object.entries(\n              canadaResponse.timeline.cases\n            ).map((item) => {\n              return {\n                date: item[0],\n                canada: item[1],\n              };\n            });\n\n            const usaCases = Object.entries(usaResponse.timeline.cases).map(\n              (item) => {\n                return {\n                  date: item[0],\n                  usa: item[1],\n                };\n              }\n            );\n\n            const spainCases = Object.entries(spainResponse.timeline.cases).map(\n              (item) => {\n                return {\n                  date: item[0],\n                  spain: item[1],\n                };\n              }\n            );\n\n            const italyCases = Object.entries(italyResponse.timeline.cases).map(\n              (item) => {\n                return {\n                  date: item[0],\n                  italy: item[1],\n                };\n              }\n            );\n\n            const germanyCases = Object.entries(\n              germanyResponse.timeline.cases\n            ).map((item) => {\n              return {\n                date: item[0],\n                germany: item[1],\n              };\n            });\n\n            const franceCases = Object.entries(\n              franceResponse.timeline.cases\n            ).map((item) => {\n              return {\n                date: item[0],\n                france: item[1],\n              };\n            });\n\n            const chinaCases = Object.entries(chinaResponse.timeline.cases).map(\n              (item) => {\n                return {\n                  date: item[0],\n                  china: item[1],\n                };\n              }\n            );\n\n            const iranCases = Object.entries(iranResponse.timeline.cases).map(\n              (item) => {\n                return {\n                  date: item[0],\n                  iran: item[1],\n                };\n              }\n            );\n\n            const totalCases = [\n              ...canadaCases,\n              ...usaCases,\n              ...spainCases,\n              ...italyCases,\n              ...germanyCases,\n              ...franceCases,\n              ...chinaCases,\n              ...iranCases,\n            ];\n\n            console.log(\"total cases\", totalCases);\n            const mergedCases = totalCases.reduce((acc, item) => {\n              if (!acc[item.date]) {\n                acc[item.date] = { ...item };\n              } else {\n                acc[item.date] = { ...acc[item.date], ...item };\n              }\n              return acc;\n            }, {});\n            // console.log(\"merged\", Object.entries(mergedCases));\n\n            const series = Object.entries(mergedCases).map((item) => {\n              return item[1];\n            });\n            // console.log(series);\n            setGlobalSeries(series);\n          })\n        )\n        .catch((err) => {\n          console.log(\"[Fetch global series]\", err);\n        });\n    };\n\n    fetchCountriesSeries();\n  }, []);\n\n  return (\n    <>\n      <SeriesChart confirmCases={globalSeries} />\n    </>\n  );\n};\n\nexport default CovidCurves;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardHeader, CardContent } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    cardHeader: {\n      background: theme.palette.background.card,\n    },\n    cardContent: {\n      \"& > div\": {\n        justifyContent: \"center\",\n      },\n    },\n  };\n});\n\nexport const SimpleCard = ({ title, children }) => {\n  const classes = useStyles();\n  return (\n    <Card>\n      <CardHeader\n        className={classes.cardHeader}\n        title={title}\n        align=\"left\"\n      ></CardHeader>\n      <CardContent className={classes.cardContent}>{children}</CardContent>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\n\nimport GlobalSummary from \"./global-summary\";\nimport GlobalTable from \"./global-table\";\nimport GlobalChart from \"./global-charts\";\nimport GlobalSeries from \"./global-series\";\nimport CovidCurves from \"./covid-curves\";\nimport { SimpleCard } from \"../../components/cards/simple-card\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    gridContainer: { padding: \"0 25px\" },\n    gridContainerItem: {\n      justifyContent: \"center\",\n      alignItems: \"stretch\",\n    },\n    gridItem: { paddingTop: 30 },\n  };\n});\n\nconst Global = () => {\n  const [global, setGlobal] = useState([]);\n  const classes = useStyles();\n  const theme = useTheme();\n\n  useEffect(() => {\n    const fetchCountrySummary = () => {\n      axios\n        .get(\"https://corona.lmao.ninja/countries?sort=cases\")\n        .then((response) => setGlobal(response.data));\n    };\n\n    fetchCountrySummary();\n  }, []);\n\n  return (\n    <>\n      <Grid container className={classes.gridContainer}>\n        <Grid item xs={12} align=\"center\" className={classes.gridItem}>\n          <GlobalSummary />\n        </Grid>\n        <Grid item xs={12} align=\"center\" className={classes.gridItem}>\n          <SimpleCard title=\"Global Cumulative Cases\">\n            <GlobalSeries />\n          </SimpleCard>\n        </Grid>\n        <Grid item xs={12} align=\"center\" className={classes.gridItem}>\n          <Grid container spacing={2} className={classes.gridContainerItem}>\n            <Grid item md={6} align=\"center\" className={classes.gridItem}>\n              <SimpleCard title=\"Comparing the coronavirus curve\">\n                <CovidCurves />\n              </SimpleCard>\n            </Grid>\n            <Grid item md={6} align=\"center\" className={classes.gridItem}>\n              <SimpleCard title=\"Cumulative Confirmed Cases by Country\">\n                <GlobalChart data={global.slice(0, 20)} />\n              </SimpleCard>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} align=\"center\" className={classes.gridItem}>\n          <SimpleCard title=\"Cases by Country\">\n            <GlobalTable global={global} />\n          </SimpleCard>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\nexport default Global;\n","import React from \"react\";\nimport Global from \"../../components/global\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <Global />\n    </>\n  );\n};\nexport default HomePage;\n","import React from \"react\";\nimport { LineChart, Line, ResponsiveContainer } from \"recharts\";\n\nconst MiniChart = ({ data = [], stroke = \"#8884d8\" }) => {\n  return (\n    <ResponsiveContainer width=\"100%\" height={40}>\n      <LineChart data={data}>\n        <Line\n          type=\"monotone\"\n          dataKey=\"cases\"\n          stroke={stroke}\n          strokeWidth={2}\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default MiniChart;\n","import React from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport MiniChart from \"../../components/charts/minichart\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    container: {\n      padding: \"30px 50px\",\n      justifyContent: \"center\",\n    },\n    confirmed: {\n      \"& *\": {\n        color: theme.palette.cases.confirmed,\n      },\n    },\n    active: {\n      \"& *\": {\n        color: theme.palette.cases.active,\n      },\n    },\n    recovered: {\n      \"& *\": {\n        color: theme.palette.cases.recovered,\n      },\n    },\n    deaths: {\n      \"& *\": {\n        color: theme.palette.cases.deaths,\n      },\n    },\n    title: {\n      textAlign: \"center\",\n      textTransform: \"uppercase\",\n      marginBottom: \"0.5rem\",\n      fontWeight: \"bold\",\n    },\n    newCases: {\n      textAlign: \"center\",\n      fontSize: \"0.75rem\",\n    },\n    totalCases: {\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n      marginBottom: \"0.5\",\n    },\n  };\n});\n\nconst SummaryCard = ({\n  todayCases,\n  totalCases,\n  chartData,\n  title,\n  classes,\n  cardClass,\n  stroke,\n}) => {\n  return (\n    <Card className={cardClass}>\n      <CardContent>\n        <Typography variant=\"h6\" className={classes.title}>\n          {title}\n        </Typography>\n        <Typography variant=\"body1\" className={classes.newCases}>\n          {todayCases}\n        </Typography>\n        <Typography variant=\"h5\" className={classes.totalCases}>\n          {totalCases}\n        </Typography>\n        <Box justifyContent=\"center\">\n          <MiniChart data={chartData} stroke={stroke} />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst SummaryCards = ({ countrySummary, countrySeries, theme, classes }) => {\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={4}>\n        <SummaryCard\n          todayCases={`[+${countrySummary.todayCases}]`}\n          totalCases={countrySummary.cases}\n          chartData={countrySeries.confirmed}\n          title=\"Confirmed\"\n          classes={classes}\n          cardClass={classes.confirmed}\n          stroke={theme.palette.cases.confirmed}\n        />\n      </Grid>\n\n      <Grid item xs={4}>\n        <SummaryCard\n          todayCases={\"[NA]\"}\n          totalCases={countrySummary.recovered}\n          chartData={countrySeries.recovered}\n          title=\"Recovered\"\n          classes={classes}\n          cardClass={classes.recovered}\n          stroke={theme.palette.cases.recovered}\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <SummaryCard\n          todayCases={`[+${countrySummary.todayDeaths}]`}\n          totalCases={countrySummary.deaths}\n          chartData={countrySeries.deaths}\n          title=\"Deaths\"\n          classes={classes}\n          cardClass={classes.deaths}\n          stroke={theme.palette.cases.deaths}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst SummaryMessage = () => {\n  return (\n    <>\n      {/* <Typography variant=\"h3\">Tracking the coronavirus</Typography> */}\n      <Typography variant=\"h6\" gutterBottom>\n        Stay informed with the latest data on the number of COVID-19 cases.\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        While the numbers can tell you a lot about the coronavirus, the case\n        numbers only tell part of the story.\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        Areas that test a high number of people will ultimately detect more\n        cases than those that are not doing as much testing. There may also be\n        surges in the number of cases when there are a high number of tests done\n        in a short time frame.\n      </Typography>\n      <Typography variant=\"body1\">\n        The same is true for Canada's provinces and territories. Different rates\n        in testing and changes in how regions are recording results can result\n        in higher numbers for some regions over others.\n      </Typography>\n    </>\n  );\n};\n\nconst CountrySummary = ({ countrySummary, countrySeries, theme }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={4} className={classes.container}>\n      <Grid item md={4}>\n        <SummaryCards\n          countrySummary={countrySummary}\n          countrySeries={countrySeries}\n          theme={theme}\n          classes={classes}\n        />\n      </Grid>\n      <Grid item md={8}>\n        <SummaryMessage />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CountrySummary;\n","import React from \"react\";\n\nimport { compareValues } from \"../../util/sort\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\n\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Cell,\n} from \"recharts\";\n\nconst getPath = (x, y, width, height) => {\n  return `M${x},${y + height}\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${\n    x + width / 2\n  }, ${y}\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${\n    y + height\n  } ${x + width}, ${y + height}\n          Z`;\n};\n\nconst TriangleBar = (props) => {\n  const { fill, x, y, width, height } = props;\n\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\n};\n\nconst ProvinceTable = ({ data }) => {\n  return (\n    <TableContainer component={Paper}>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>PROVINCE</TableCell>\n            <TableCell>CONFIRMED CASES</TableCell>\n            <TableCell>DEATHS</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((item, index) => {\n            return (\n              <TableRow key={index}>\n                <TableCell>\n                  <Typography>{item.province}</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>{item.confirmed}</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography>{item.deaths}</Typography>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nconst ProvinceChart = ({ data }) => {\n  return (\n    <ResponsiveContainer width=\"100%\" height={500}>\n      <ComposedChart\n        data={data}\n        margin={{ top: 30, right: 30, left: 30, bottom: 30 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          angle={0}\n          textAnchor=\"end\"\n          dataKey=\"provincialCode\"\n          style={{ fontSize: 10 }}\n        />\n        <YAxis\n          yAxisId=\"left\"\n          fontSize={12}\n          label={{\n            value: \"Confirmed Cases\",\n            angle: -90,\n            position: \"insideLeft\",\n            offset: 0,\n          }}\n        />\n        <YAxis\n          yAxisId=\"right\"\n          orientation=\"right\"\n          fontSize={12}\n          label={{\n            value: \"Deaths\",\n            angle: 90,\n            position: \"insideRight\",\n            offset: 0,\n          }}\n        />\n        <Tooltip />\n        <Legend verticalAlign=\"top\" />\n        <Bar\n          yAxisId=\"left\"\n          dataKey=\"confirmed\"\n          fill=\"#ec407a\"\n          shape={<TriangleBar />}\n          label={{ position: \"top\" }}\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} />\n          ))}\n        </Bar>\n        <Bar\n          yAxisId=\"right\"\n          dataKey=\"deaths\"\n          fill=\"#607d8b\"\n          shape={<TriangleBar />}\n          label={{ position: \"top\" }}\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} />\n          ))}\n        </Bar>\n      </ComposedChart>\n    </ResponsiveContainer>\n  );\n};\nconst ProvinceSummary = ({ tableData, themes }) => {\n  // console.log(\"TABLE DATA\", tableData);\n  const sortedData = tableData\n    ? tableData.sort(compareValues(\"confirmed\", \"desc\"))\n    : [];\n\n  // console.log(\"sorted\", sortedData);\n  return (\n    <>\n      <Grid\n        container\n        align=\"center\"\n        spacing={5}\n        style={{ padding: \"20px 50px\" }}\n      >\n        <Grid item xs={12}>\n          <Typography variant=\"h4\" align=\"left\">\n            Confirmed COVID-19 cases in Canada by province and territory\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          lg={4}\n          align=\"center\"\n          style={{ marginLeft: \"auto\", marginRight: \"auto\" }}\n        >\n          <Paper align=\"center\">\n            <ProvinceTable data={sortedData} />\n          </Paper>\n        </Grid>\n        <Grid\n          item\n          lg={8}\n          align=\"center\"\n          style={{ display: \"flex\", alignItems: \"stretch\" }}\n        >\n          <Paper\n            style={{\n              flex: \"1 1 600px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <ProvinceChart data={sortedData} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ProvinceSummary;\n","export function compareValues(key, order = \"asc\") {\n  return function innerSort(a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      // property doesn't exist on either object\n      return 0;\n    }\n\n    const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\n    const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\n\n    let comparison = 0;\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) {\n      comparison = -1;\n    }\n    return order === \"desc\" ? comparison * -1 : comparison;\n  };\n}\n","export const countryStore = [\n  { id: 1, country_name: \"Australia\", code: \"\", icon: \"australia.png\" },\n  { id: 1, country_name: \"Austria\", code: \"\", icon: \"austria.png\" },\n  { id: 1, country_name: \"Belgium\", code: \"\", icon: \"belgium.png\" },\n  { id: 1, country_name: \"Brazil\", code: \"\", icon: \"brazil.png\" },\n  { id: 124, country_name: \"Canada\", code: \"ca\", icon: \"canada.png\" },\n  { id: 156, country_name: \"China\", code: \"cn\", icon: \"china.png\" },\n  { id: 1, country_name: \"Denmark\", code: \"\", icon: \"denmark.png\" },\n  { id: 250, country_name: \"France\", code: \"FR\", icon: \"france.png\" },\n  { id: 276, country_name: \"Germany\", code: \"DE\", icon: \"germany.png\" },\n  { id: 364, country_name: \"Iran\", code: \"IR\", icon: \"iran.png\" },\n  { id: 380, country_name: \"Italy\", code: \"IT\", icon: \"italy.png\" },\n  { id: 1, country_name: \"Netherlands\", code: \"\", icon: \"netherlands.png\" },\n  { id: 1, country_name: \"Norway\", code: \"\", icon: \"norway.png\" },\n  { id: 1, country_name: \"Portugal\", code: \"\", icon: \"portugal.png\" },\n  { id: 410, country_name: \"S. Korea\", code: \"KR\", icon: \"south_korea.png\" },\n  { id: 724, country_name: \"Spain\", code: \"ES\", icon: \"spain.png\" },\n  { id: 756, country_name: \"Switzerland\", code: \"CH\", icon: \"switzerland.png\" },\n  { id: 1, country_name: \"Sweden\", code: \"\", icon: \"sweden.png\" },\n  { id: 840, country_name: \"USA\", code: \"US\", icon: \"usa.png\" },\n  { id: 826, country_name: \"UK\", code: \"GB\", icon: \"uk.png\" }\n];\n\nexport const top10Countries = [\n  \"China\",\n  \"France\",\n  \"Germany\",\n  \"Iran\",\n  \"Italy\",\n  \"S. Korea\",\n  \"Spain\",\n  \"Switzerland\",\n  \"UK\",\n  \"USA\"\n];\n\nexport const top20Countries = [\n  \"Australia\",\n  \"Austria\",\n  \"Belgium\",\n  \"Brazil\",\n  \"Canada\",\n  \"China\",\n  \"Denmark\",\n  \"France\",\n  \"Germany\",\n  \"Iran\",\n  \"Italy\",\n  \"Netherlands\",\n  \"Norway\",\n  \"Portugal\",\n  \"S. Korea\",\n  \"Spain\",\n  \"Sweden\",\n  \"Switzerland\",\n  \"UK\",\n  \"USA\"\n];\n\nexport const bannerDB1 = [\n  \"Avoid going out during the lockdown. Help break the chain of spread.\",\n  \"Be a true Canadian. Show compassion. Be considerate. Help those in need. We will get through this!\",\n  \"Be compassionate! Help those in need like the elderly and poor. They are facing a crisis you cannot even imagine!\",\n  \"Be considerate : While buying essentials remember : You need to share with Others!\",\n  \"Do not panic! ❌ Your essential needs will be taken care of. DO NOT HOARD.\",\n  \"Don't Hoard groceries and essentials. Please ensure that people who are in need don't face a shortage because of you!\",\n  \"Going out to buy essentials? Social Distancing is KEY! Maintain 2 metres distance between each other in the line.\",\n  \"Help out your workers and domestic workers by not cutting their salaries. Show the true Canadian spirit!\",\n  \"Help the medical fraternity by staying at home!\",\n  \"Plan and calculate your essential needs for the next three weeks and get only what is bare minimum needed.\",\n  \"Lockdown means LOCKDOWN! Avoid going out unless absolutely necessary. Stay safe!\",\n  \"Wash your hands with soap and water often. Keep the virus at bay.\"\n];\n\nexport const bannerDB = [\n  {\n    banner:\n      \"Avoid going out during the lockdown. Help break the chain of spread.\",\n    id: \"1\",\n    numberoftimes: \"2\"\n  },\n  {\n    banner:\n      \"Be compassionate! Help those in need like the elderly and poor. They are facing a crisis you cannot even imagine!\",\n    id: \"2\",\n    numberoftimes: \"2\"\n  },\n  {\n    banner:\n      \"Be considerate : While buying essentials remember : You need to share with Others! \",\n    id: \"3\",\n    numberoftimes: \"2\"\n  },\n  {\n    banner:\n      \"Going out to buy essentials? Social Distancing is KEY! Maintain 2 metres distance between each other in the line. \",\n    id: \"4\",\n    numberoftimes: \"2\"\n  },\n  {\n    banner:\n      \"Plan ahead! Take a minute and check how much you have at home. Planning ahead let's you buy exactly what you need! \",\n    id: \"5\",\n    numberoftimes: \"2\"\n  },\n  {\n    banner:\n      \"Plan and calculate your essential needs for the next three weeks and get only what is bare minimum needed. \",\n    id: \"6\",\n    numberoftimes: \"2\"\n  },\n  {\n    banner:\n      \"Help out the elderly by bringing them their groceries and other essentials. \",\n    id: \"7\",\n    numberoftimes: \"2\"\n  },\n  {\n    banner:\n      \"Help out your workers and domestic workers by not cutting their salaries. Show the true Canadian spirit! \",\n    id: \"8\",\n    numberoftimes: \"2\"\n  },\n  {\n    banner:\n      \"Lockdown means LOCKDOWN! Avoid going out unless absolutely necessary. Stay safe! \",\n    id: \"9\",\n    numberoftimes: \"1\"\n  },\n  {\n    banner: \"Panic mode : OFF! ❌\\nESSENTIALS ARE ON! ✔️ \",\n    id: \"10\",\n    numberoftimes: \"1\"\n  },\n  {\n    banner:\n      \"Do not panic! ❌ Your essential needs will be taken care of. DO NOT HOARD. \",\n    id: \"11\",\n    numberoftimes: \"1\"\n  },\n  {\n    banner:\n      \"Be a true Canadian. Show compassion. Be considerate. Help those in need. We will get through this!\",\n    id: \"12\",\n    numberoftimes: \"1\"\n  },\n  {\n    banner:\n      \"If you have symptoms and suspect you have coronavirus - reach out to your doctor or call state helplines. 📞  Get help. \",\n    id: \"13\",\n    numberoftimes: \"1\"\n  },\n  {\n    banner:\n      \"Stand Against FAKE News and WhatsApp Forwards! Do NOT ❌ forward a message until you verify the content it contains. \",\n    id: \"14\",\n    numberoftimes: \"1\"\n  },\n  {\n    banner:\n      \"If you have any queries, reach out to your district administration or doctors! \",\n    id: \"15\",\n    numberoftimes: \"1\"\n  },\n  {\n    banner: \"Wash your hands with soap and water often. Keep the virus at bay.\",\n    id: \"16\",\n    numberoftimes: \"1\"\n  },\n  {\n    banner:\n      \"The hot weather will not stop the virus! You can! Stay home, stay safe.\",\n    id: \"17\",\n    numberoftimes: \"1\"\n  },\n  {\n    banner: \"Help the medical fraternity by staying at home! \",\n    id: \"18\",\n    numberoftimes: \"1\"\n  },\n  {\n    banner:\n      \"Don't Hoard groceries and essentials. Please ensure that people who are in need don't face a shortage because of you! \",\n    id: \"19\",\n    numberoftimes: \"1\"\n  },\n  {\n    banner:\n      \"Call up your loved ones during the lockdown, support each other through these times.\",\n    id: \"20\",\n    numberoftimes: \"1\"\n  },\n  {\n    banner:\n      \"Even the Virus Does not discriminate. Why do you? DO NOT DISCRIMINATE. WE are all Canadians! \",\n    id: \"21\",\n    numberoftimes: \"\"\n  },\n  {\n    banner:\n      \"Our brothers from the north east are just as Canadian as you! Help everyone during this crisis ❤️ \",\n    id: \"22\",\n    numberoftimes: \"\"\n  },\n  {\n    banner:\n      \"Get in touch with your local NGO's and District administration to volunteer for this cause. \",\n    id: \"23\",\n    numberoftimes: \"\"\n  },\n  {\n    banner:\n      \"This will pass too. Enjoy your time at home and spend quality time with your family! Things will be normal soon. \",\n    id: \"24\",\n    numberoftimes: \"\"\n  },\n  {\n    banner:\n      \"#BreakTheChain of Unverified WhatsApp Forwards which spread wrong information! Don't forward unless you verify it. \",\n    id: \"25\",\n    numberoftimes: \"\"\n  }\n];\n\nexport const canadianProvinceDB = [\n  \"Alberta\",\n  \"British Columbia\",\n  // \"Diamond Princess\",\n  \"Grand Princess\",\n  \"Manitoba\",\n  \"New Brunswick\",\n  \"Newfoundland and Labrador\",\n  \"Northwest Territories\",\n  \"Nova Scotia\",\n  \"Ontario\",\n  \"Prince Edward Island\",\n  \"Quebec\",\n  \"Saskatchewan\",\n  \"Yukon\"\n];\n\nexport const canadianProvincialCodeDB = {\n  Alberta: \"AB\",\n  \"British Columbia\": \"BC\",\n  // \"Diamond Princess\",\n  \"Grand Princess\": \"GP\",\n  Manitoba: \"MB\",\n  \"New Brunswick\": \"NB\",\n  \"Newfoundland and Labrador\": \"NL\",\n  \"Northwest Territories\": \"NT\",\n  \"Nova Scotia\": \"NS\",\n  Ontario: \"ON\",\n  \"Prince Edward Island\": \"PE\",\n  Quebec: \"QC\",\n  Saskatchewan: \"SK\",\n  Yukon: \"YT\"\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport CountrySummary from \"../../components/country-summary/country-summary\";\nimport ProvinceSummary from \"../../components/province-summary/province-summary\";\nimport { canadianProvinceDB, canadianProvincialCodeDB } from \"../../store\";\n\nconst CanadaPage = () => {\n  const [countrySummary, setCountrySummary] = useState([]);\n  const [countrySeries, setCountrySeries] = useState([]);\n  const [provinceTableData, setProvinceTableData] = useState([]);\n\n  const theme = useTheme();\n\n  // fetch country summary\n  useEffect(() => {\n    function fetchCountrySummary() {\n      axios\n        .get(\"https://corona.lmao.ninja/countries/\")\n        .then((response) => {\n          const countries = response.data;\n          const countryData = countries.filter((country) => {\n            return country.country === \"Canada\";\n          });\n\n          setCountrySummary(countryData[0]);\n        })\n        .catch((err) => {\n          console.log(\"[Fetch country summary]\", err);\n        });\n    }\n    fetchCountrySummary();\n  }, []);\n\n  // fetch country series\n  useEffect(() => {\n    const fetchCountrySeries = () => {\n      axios\n        .get(`https://corona.lmao.ninja/v2/historical/canada/`)\n        .then((response) => {\n          const caseData = response.data.timeline;\n\n          let confirmedCases = Object.entries(caseData.cases).map((item) => {\n            return { date: item[0], cases: item[1] };\n          });\n\n          let recoveredCases = Object.entries(caseData.recovered).map(\n            (item) => {\n              return { date: item[0], cases: item[1] };\n            }\n          );\n\n          let deathCases = Object.entries(caseData.deaths).map((item) => {\n            return { date: item[0], cases: item[1] };\n          });\n\n          const cases = {\n            confirmed: confirmedCases,\n            recovered: recoveredCases,\n            deaths: deathCases,\n          };\n          setCountrySeries(cases);\n        })\n        .catch((err) => {\n          console.log(\"[Fetch country series]\", err);\n        });\n    };\n\n    fetchCountrySeries();\n  }, []);\n\n  // fetch province summary\n  useEffect(() => {\n    const fetchProvinceSummary = () => {\n      axios\n        .get(\"https://corona.lmao.ninja/v2/jhucsse\")\n        .then((response) => {\n          // console.log(\"DATA\", response.data);\n          const data = response.data.filter((country) => {\n            return (\n              country.country === \"Canada\" &&\n              canadianProvinceDB.includes(country.province)\n            );\n          });\n\n          // console.log(\"province summary\", data);\n\n          //provinceTableData\n          const tableData = data.reduce((acc, item) => {\n            acc = [\n              ...acc,\n              {\n                province: item.province,\n                provincialCode: canadianProvincialCodeDB[item.province],\n                confirmed: item.stats.confirmed,\n                deaths: item.stats.deaths,\n              },\n            ];\n            return acc;\n          }, []);\n          setProvinceTableData(tableData);\n          // console.log(\"Table Data\", tableData);\n\n          // province chart data\n          const chartData = data.reduce(\n            (acc, item) => {\n              acc.confirmed = [\n                ...acc.confirmed,\n                { province: item.province, cases: item.stats.confirmed },\n              ];\n              acc.recovered = [\n                ...acc.recovered,\n                { province: item.province, cases: item.stats.recovered },\n              ];\n              acc.deaths = [\n                ...acc.deaths,\n                { province: item.province, cases: item.stats.deaths },\n              ];\n              return acc;\n            },\n            { confirmed: [], recovered: [], deaths: [] }\n          );\n\n          // console.log(\"chart data\", chartData);\n          // setProvinceChartData(chartData);\n        })\n        .catch((err) => {\n          console.log(\"[Fetch province]\", err);\n        });\n    };\n\n    fetchProvinceSummary();\n  }, []);\n\n  return (\n    <>\n      <CountrySummary\n        countrySummary={countrySummary}\n        countrySeries={countrySeries}\n        theme={theme}\n      />\n      <ProvinceSummary tableData={provinceTableData} theme={theme} />\n    </>\n  );\n};\n\nexport default CanadaPage;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { bannerDB } from \"../../store\";\nconst useStyles = makeStyles((theme) => {\n  return {\n    container: {\n      background: \"#bbdefb\",\n      textAlign: \"center\",\n      padding: 10,\n    },\n  };\n});\n\nconst Banner = () => {\n  const [snippets, setSnippets] = useState([]);\n  const [snippet, setSnippet] = useState();\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setSnippets(bannerDB || []);\n    setSnippet(bannerDB[0] || \"\");\n  }, []);\n\n  const snippetChooser = useCallback(\n    (min, max) => {\n      const index = Math.random() * (max - min) + min;\n      setSnippet(snippets[Math.floor(index)]);\n    },\n    [snippets]\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      snippetChooser(0, snippets.length - 1);\n    }, 7000);\n    return () => clearInterval(interval);\n  }, [snippetChooser, snippets]);\n\n  return (\n    <>\n      <Container maxWidth={false} className={classes.container}>\n        <Typography variant=\"subtitle1\">\n          {snippet ? snippet.banner : \"\"} &nbsp;\n        </Typography>\n      </Container>\n    </>\n  );\n};\nexport default Banner;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Banner from \"../../components/banner/banner\";\n\nconst AboutPage = () => {\n  const urlPath = process.env.PUBLIC_URL;\n  return (\n    <>\n      <Banner />\n      <Grid container style={{ textAlign: \"center\" }}>\n        <Grid item xs>\n          <Typography\n            variant=\"h2\"\n            color=\"secondary\"\n            style={{ marginTop: 60, textTransform: \"uppercase\" }}\n          >\n            Social Distancing\n          </Typography>\n          <img\n            alt=\"\"\n            src={`${urlPath}/images/svg/social_distancing.svg`}\n            style={{ maxHeight: \"50vh\", margin: 20 }}\n          />\n        </Grid>\n        <Grid item xs>\n          <List\n            aria-label=\"social-distancing\"\n            style={{ marginTop: 50, width: \"80%\" }}\n          >\n            <ListItem color=\"textSecondary\">\n              <Typography variant=\"h6\" style={{ color: \"#616074\" }}>\n                Social distancing involves taking steps to limit the number of\n                people you come into close contact with. It can help you reduce\n                the risk of getting sick.\n              </Typography>\n            </ListItem>\n            <ListItem color=\"textSecondary\">\n              <Typography variant=\"body1\" style={{ color: \"#616074\" }}>\n                This is not the same as self-isolation. You do not need to\n                remain indoors, but you do need to avoid being in close contact\n                with people.\n              </Typography>\n            </ListItem>\n            <ListItem color=\"textSecondary\">\n              <Typography variant=\"body1\" style={{ color: \"#616074\" }}>\n                To protect yourself and others:\n              </Typography>\n              <ul>\n                <li>\n                  keep at least 6 feet (the length of a bicycle) from others\n                  when going out for groceries, medical trips and other\n                  essential needs\n                </li>\n                <li>\n                  limit the number of times you leave your home for errands\n                </li>\n                <li>try to shop at less busy times</li>\n                <li>\n                  order online to have groceries or other items delivered if\n                  possible\n                </li>\n                <li>\n                  go for a walk in your neighbourhood or park while maintaining\n                  distance from others\n                </li>\n                <li>\n                  avoid overcrowding in elevators or other enclosed spaces\n                </li>\n                <li>follow Alberta’s recommendations on mass gatherings</li>\n                <li>\n                  wash or sanitize your hands after touching communal surfaces\n                </li>\n              </ul>\n            </ListItem>\n          </List>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default AboutPage;\n","import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nconst MuiSandboxPage = () => {\n  const urlPath = process.env.PUBLIC_URL;\n  return (\n    <Box style={{ textAlign: \"center\" }}>\n      <img\n        alt=\"\"\n        src={`${urlPath}/images/svg/wash_hands.svg`}\n        style={{ maxHeight: \"50vh\", margin: 50 }}\n      />\n      <Typography\n        variant=\"h4\"\n        color=\"secondary\"\n        style={{ textTransform: \"uppercase\" }}\n      >\n        Handwashing\n      </Typography>\n      <Typography\n        variant=\"body1\"\n        style={{\n          width: 600,\n          margin: \"20px auto\",\n          color: \"#616074\"\n        }}\n      >\n        Regular handwashing, particularly before and after certain activities,\n        is one of the best ways to remove germs, avoid getting sick, and prevent\n        the spread of germs to others. It’s quick, it’s simple, and it can keep\n        us all from getting sick. Handwashing is a win for everyone, except the\n        germs.\n      </Typography>\n    </Box>\n  );\n};\n\nexport default MuiSandboxPage;\n","export const dataStore = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100\n  }\n];\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\nimport { dataStore } from \"./rechat-data\";\n\nconst ReChartSandboxPage = () => {\n  const data = dataStore;\n  return (\n    <>\n      <LineChart\n        width={600}\n        height={400}\n        data={data}\n        margin={{\n          top: 50,\n          right: 20,\n          left: 20,\n          bottom: 20\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"pv\"\n          stroke=\"#8884d8\"\n          activeDot={{ r: 8 }}\n        />\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n      </LineChart>\n    </>\n  );\n};\n\nexport default ReChartSandboxPage;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { top20Countries, countryStore } from \"../../../store\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    padding: 20,\n    background: \"#fafafa\",\n    justifyContent: \"center\"\n  },\n  cardRoot: {\n    margin: 3,\n    flex: \"1 1 400px\"\n  },\n  flagIcon: {\n    height: 50\n  },\n  totalCaseGrid: {\n    textAlign: \"center\"\n  },\n  totalCaseGridRow: {\n    marginTop: 10,\n    color: \"#504E65\"\n  }\n}));\n\n// function compare(a, b) {\n//   console.log(a, b);\n//   if (a.stat.cases > b.stat.cases) {\n//     return 1;\n//   }\n//   if (a.stat.cases < b.stat.cases) {\n//     return -1;\n//   }\n//   return 0;\n// }\n\nconst RapidApiPage = () => {\n  const apiKey = process.env.REACT_APP_COVID19_KEY;\n  const [countries, setCountries] = useState([]);\n  const classes = useStyles();\n  const urlPath = process.env.PUBLIC_URL;\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php\",\n        {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n            \"x-rapidapi-key\": apiKey\n          }\n        }\n      )\n      .then(response => {\n        const data = response.data.countries_stat;\n        const fetchCountries = data.filter(item => {\n          return top20Countries.includes(item.country_name);\n        });\n\n        const concatCountries = [...fetchCountries, ...countryStore];\n\n        const mergeCountries = concatCountries.reduce((countries, c) => {\n          if (c.cases) {\n            countries[c.country_name] = {};\n            countries[c.country_name][\"stat\"] = {\n              ...c\n            };\n          } else {\n            countries[c.country_name] = { ...countries[c.country_name], ...c };\n          }\n          return countries;\n        }, []);\n\n        setCountries(Object.entries(mergeCountries));\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, [apiKey]);\n\n  console.log(countries);\n  return (\n    <>\n      <Grid container>\n        <Grid item sm>\n          <Paper className={classes.paper}>\n            {countries.map(cItem => {\n              const c = cItem[1];\n              const { stat } = c;\n              return (\n                <Card className={classes.cardRoot} key={c.stat.country_name}>\n                  <CardHeader\n                    className={classes.totalCaseGrid}\n                    title={\n                      <>\n                        <img\n                          alt=\"\"\n                          src={`${urlPath}/icons/${c.icon}`}\n                          className={classes.flagIcon}\n                        />\n                        <Typography variant=\"h5\" component=\"h2\">\n                          {c.stat.country_name}\n                        </Typography>\n                      </>\n                    }\n                  />\n                  <CardContent>\n                    <Grid container>\n                      <Grid item xs className={classes.totalCaseGrid}>\n                        <Typography\n                          variant=\"body1\"\n                          color=\"textSecondary\"\n                          component=\"p\"\n                        >\n                          Cases: {stat.cases}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs className={classes.totalCaseGrid}>\n                        <Typography\n                          variant=\"body1\"\n                          color=\"textSecondary\"\n                          component=\"p\"\n                        >\n                          Deaths: {stat.deaths}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs className={classes.totalCaseGrid}>\n                        <Typography\n                          variant=\"body1\"\n                          color=\"textSecondary\"\n                          component=\"p\"\n                        >\n                          Recovered: {stat.total_recovered}\n                        </Typography>\n                      </Grid>\n                      <Grid\n                        item\n                        xs={12}\n                        className={`${classes.totalCaseGrid} ${classes.totalCaseGridRow}`}\n                      >\n                        <Typography variant=\"body1\" component=\"p\">\n                          Total cases per 1m population:\n                          {stat.total_cases_per_1m_population}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </Paper>\n        </Grid>\n        {/* <Grid item sm>\n          <Paper className={classes.paper}>Right</Paper>\n        </Grid> */}\n      </Grid>\n\n      {/* <Footer /> */}\n    </>\n  );\n};\n\nexport default RapidApiPage;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport {\n  createMuiTheme,\n  MuiThemeProvider,\n  responsiveFontSizes,\n} from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Header from \"./components/header/header\";\n\nimport HomePage from \"./pages/home/home\";\nimport CanadaPage from \"./pages/canada/canada\";\nimport AboutPage from \"./pages/about/about\";\nimport MuiSandboxPage from \"./pages/sandbox/mui/mui-sandbox\";\nimport ReChartSandboxPage from \"./pages/sandbox/rechart/rechart-sandbox\";\nimport RapidApiPage from \"./pages/sandbox/rapid-api/rapid-api\";\n\nimport \"./App.css\";\n\n// Covid19 - https://coolors.co/1e2023-c6315e-2dc698-ffffff-632d70\nlet theme = createMuiTheme({\n  typography: {\n    fontFamily: [\"Overpass\", \"sans-serif\"],\n    h1: {\n      color: \"#343638\",\n    },\n    h2: {\n      color: \"#343638\",\n    },\n    h3: {\n      color: \"#343638\",\n    },\n    h4: {\n      color: \"#343638\",\n    },\n    h5: {\n      color: \"#343638\",\n    },\n    h6: {\n      color: \"#343638\",\n    },\n  },\n  palette: {\n    primary: { main: \"#1e2023\" },\n    secondary: { main: \"#EC407A\" },\n    info: { main: \"#8884D8\" },\n    success: { main: \"#009688\" },\n    text: {\n      primary: \"#5c5d5f\",\n      header: \"#343638\",\n      activeNavLink: \"#f58a97\",\n    },\n    background: {\n      dark: \"#1E2023\",\n      card: \"#eeeeef\",\n      tableHeader: \"#2a2d31\",\n    },\n    cases: {\n      confirmed: \"#EC407A\",\n      active: \"#2196f3\",\n      recovered: \"#009688\",\n      deaths: \"#607d8b\",\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <React.Fragment>\n        <CssBaseline />\n        <HashRouter basename=\"/\">\n          <Header />\n\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/canada\" component={CanadaPage} />\n            <Route exact path=\"/chart\" component={HomePage} />\n            <Route exact path=\"/about\" component={AboutPage} />\n            <Route exact path=\"/mui-sandbox\" component={MuiSandboxPage} />\n            <Route\n              exact\n              path=\"/rechart-sandbox\"\n              component={ReChartSandboxPage}\n            />\n            <Route exact path=\"/rapid-api\" component={RapidApiPage} />\n            <Route\n              component={() => {\n                return (\n                  <h1 style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n                    Page not found\n                  </h1>\n                );\n              }}\n            />\n          </Switch>\n        </HashRouter>\n      </React.Fragment>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}